{"version":3,"file":"main.js","mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;ACAyD;;AAElD;AACA;;AAEA;AACP;AACA;AACA,WAAW,iEAAS;AACpB;;;;;;;;;;;;;;;;;;;;ACTO;AACA;AACA;AACA;AACA;AACA;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;UCjCA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;ACNqB;AACuB;AAC5C;AACA,0BAA0B,oDAAW;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,E","sources":["webpack://toomanyproxies-frontend/./assets/index.css?6d3f","webpack://toomanyproxies-frontend/./Config.mjs","webpack://toomanyproxies-frontend/../toomanyproxies/Logger.mjs","webpack://toomanyproxies-frontend/webpack/bootstrap","webpack://toomanyproxies-frontend/webpack/runtime/define property getters","webpack://toomanyproxies-frontend/webpack/runtime/hasOwnProperty shorthand","webpack://toomanyproxies-frontend/webpack/runtime/make namespace object","webpack://toomanyproxies-frontend/./assets/index.mjs"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","import { LOG_TRACE } from '../toomanyproxies/Logger.mjs';\n\nexport const bare_directory = '/bare/';\nexport const tomp_directory = '/tomp/';\n\nexport const tomp_config = {\n\tnoscript: false,\n\tbare: bare_directory, // ran on same domain\n\tloglevel: LOG_TRACE,\n};","export const LOG_TRACE = 0;\r\nexport const LOG_DEBUG = 1;\r\nexport const LOG_INFO = 2;\r\nexport const LOG_WARN = 3;\r\nexport const LOG_ERROR = 4;\r\nexport const LOG_SILENT = 5;\r\n\r\nconst trace = console.trace.bind(console);\r\nconst debug = console.debug.bind(console);\r\nconst info = console.info.bind(console);\r\nconst warn = console.warn.bind(console);\r\nconst error = console.error.bind(console);\r\n\r\nexport class Logger {\r\n\tlevels = ['trace','debug','info','warn','error','silent'];\r\n\tconstructor(loglevel){\r\n\t\tthis.loglevel = loglevel;\r\n\t}\r\n\ttrace(...args){\r\n\t\tif(this.loglevel <= LOG_TRACE)trace('[TOMP]', ...args);\r\n\t}\r\n\tdebug(...args){\r\n\t\tif(this.loglevel <= LOG_DEBUG)debug('[TOMP]', ...args);\r\n\t}\r\n\tinfo(...args){\r\n\t\tif(this.loglevel <= LOG_INFO)info('[TOMP]', ...args);\r\n\t}\r\n\twarn(...args){\r\n\t\tif(this.loglevel <= LOG_WARN)warn('[TOMP]', ...args);\r\n\t}\r\n\terror(...args){\r\n\t\tif(this.loglevel <= LOG_ERROR)error('[TOMP]', ...args);\r\n\t}\r\n};\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import './index.css';\r\nimport { tomp_config } from '../Config.mjs';\r\n\r\nconst boot = new TOMPBoot(tomp_config);\r\nconst search = new TOMPBoot.SearchBuilder('https://searx.ru/search?q=%s');\r\n\r\nconst form = document.querySelector('.main');\r\nconst input = document.querySelector('.main > input');\r\nconst error_node = document.querySelector('.error');\r\n\r\nboot.ready.catch(error => {\r\n\terror_node.textContent = error.toString();\r\n});\r\n\r\nform.addEventListener('submit', async event => {\r\n\tevent.preventDefault();\r\n\t\r\n\tawait boot.ready;\r\n\r\n\tlocation.assign(boot.html(search.query(input.value)));\r\n});"],"names":[],"sourceRoot":""}